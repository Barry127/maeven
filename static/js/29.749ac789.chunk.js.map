{"version":3,"sources":["../node_modules/.cache/mdx.macro/XI1AO.fcb475da9e.mdx.js"],"names":["_ref","components","_objectWithoutProperties","React","createElement","MDXTag","name","parentName","props"],"mappings":"mGAAA,kDAIgB,mBAAUA,GACxB,IAAIC,EAAaD,EAAKC,WACVC,YAAyBF,EAAM,CAAC,eAE5C,OAAoBG,IAAMC,cAAcC,SAAQ,CAC9CC,KAAM,UACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,KACNL,WAAYA,GACX,YAA0BE,IAAMC,cAAcC,SAAQ,CACvDC,KAAM,IACNL,WAAYA,GACX,gCAA8CE,IAAMC,cAAcC,SAAQ,CAC3EC,KAAM,aACNL,WAAYA,EACZM,WAAY,KACX,YAAa,aAA2BJ,IAAMC,cAAcC,SAAQ,CACrEC,KAAM,aACNL,WAAYA,EACZM,WAAY,KACX,WAAY,QAAsBJ,IAAMC,cAAcC,SAAQ,CAC/DC,KAAM,aACNL,WAAYA,EACZM,WAAY,KACX,UAAW,uDAAqEJ,IAAMC,cAAcC,SAAQ,CAC7GC,KAAM,aACNL,WAAYA,EACZM,WAAY,KACX,WAAY,OAAqBJ,IAAMC,cAAcC,SAAQ,CAC9DC,KAAM,aACNL,WAAYA,EACZM,WAAY,KACX,UAAW,2BAAyCJ,IAAMC,cAAcC,SAAQ,CACjFC,KAAM,KACNL,WAAYA,GACX,aAA2BE,IAAMC,cAAcC,SAAQ,CACxDC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZM,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,KAEf,mWAAiXL,IAAMC,cAAcC,SAAQ,CAC9YC,KAAM,KACNL,WAAYA,GACX,WAAyBE,IAAMC,cAAcC,SAAQ,CACtDC,KAAM,IACNL,WAAYA,GACX,yBAAuCE,IAAMC,cAAcC,SAAQ,CACpEC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZM,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,kBACd,MAAQ,EACR,YAAc,IAEf","file":"static/js/29.749ac789.chunk.js","sourcesContent":["import _objectWithoutProperties from \"/home/barry/Documents/projects/maeven/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { DoDont } from 'docs/components';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, \"useFocus\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"useFocus keeps a local state \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"hasFocus\"), \" based on \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"onFocus\"), \" and \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"onBlur\"), \" props for a DOM Element. If given props contain an \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"onFocus\"), \" or \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"onBlur\"), \" handler it is wrapped.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Signature\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-ts\",\n      \"metaString\": \"\"\n    }\n  }, \"interface OptionalFocusHandlers<T = Element> {\\n  onBlur?: FocusEventHandler<T>;\\n  onFocus?: FocusEventHandler<T>;\\n}\\n\\ninterface FocusEventHandlers<T = Element> {\\n  onBlur: FocusEventHandler<T>;\\n  onFocus: FocusEventHandler<T>;\\n}\\n\\nfunction useFocus<T = Element>(\\n  props: OptionalFocusHandlers<T> = {}\\n): [boolean, FocusEventHandlers<T>];\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Example\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Usecase for useFocus.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live withRender\",\n      \"live\": true,\n      \"withRender\": true\n    }\n  }, \"const Example = props => {\\n  const [hasFocus, focusProps] = useFocus(props);\\n\\n  return (\\n    <Card\\n      style={\\n        hasFocus\\n          ? { border: '1px solid dodgerblue' }\\n          : { border: '1px solid transparent' }\\n      }\\n    >\\n      <P>This card will indicate when the button has focus.</P>\\n      <Button {...props} {...focusProps}>\\n        Focus Me\\n      </Button>\\n    </Card>\\n  );\\n};\\n\\nrender(\\n  <Example\\n    onFocus={ev => console.log('onFocus', ev.target)}\\n    onBlur={ev => console.log('onBlur', ev.target)}\\n  />\\n);\\n\")));\n});"],"sourceRoot":""}