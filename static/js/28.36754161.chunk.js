(this.webpackJsonpmaeven=this.webpackJsonpmaeven||[]).push([[28],{602:function(e,n,t){"use strict";t.r(n);var a=t(10),o=t(0),l=t.n(o),c=t(580),r=(t(5),t(581));n.default=function(e){var n=e.components;Object(a.a)(e,["components"]);return l.a.createElement(c.MDXTag,{name:"wrapper",components:n},l.a.createElement(c.MDXTag,{name:"h1",components:n},"Form"),l.a.createElement(r.a,{of:"Form"}),l.a.createElement(c.MDXTag,{name:"h2",components:n},"Props"),l.a.createElement(r.d,{of:"Form"}),l.a.createElement(c.MDXTag,{name:"h2",components:n},"Examples"),l.a.createElement(c.MDXTag,{name:"h3",components:n},"Basic"),l.a.createElement(c.MDXTag,{name:"p",components:n},"A basic usage of Form."),l.a.createElement(c.MDXTag,{name:"pre",components:n},l.a.createElement(c.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:"live withRender",live:!0,withRender:!0}},"// import { user, lock } from 'icon-packs/feather';\n// import { code } from 'icon-packs/devicons';\n\nconst options = [\n  { value: 'JavaScript' },\n  { value: 'Java' },\n  { value: 'PHP' },\n  { value: 'Perl' },\n  { value: 'C' },\n  { value: 'Lua' },\n  { value: 'C++' },\n  { value: 'Rust' }\n];\n\nconst radioOptions = [\n  { label: 'Javascript', value: 'js' },\n  { label: 'Typescript', value: 'ts' },\n  { label: 'Coffescript', value: 'coffee' }\n];\n\nconst FullForm = () => {\n  const [tc, setTc] = useState(false);\n  const [news, setNews] = useState(true);\n\n  function toggleAll() {\n    if (tc && news) {\n      setTc(false);\n      setNews(false);\n    } else {\n      setTc(true);\n      setNews(true);\n    }\n  }\n\n  return (\n    <Form onSubmit={ev => ev.preventDefault()}>\n      <FormFieldTextInput label=\"Username\" icon={user} />\n      <FormFieldPasswordInput label=\"Password\" icon={lock} />\n      <FormFieldSelect label=\"Language\" options={options} />\n      <FormFieldRadioGroup\n        label=\"Flavour\"\n        options={radioOptions}\n        name=\"flavour\"\n      />\n      <FormFieldTextArea label=\"Comment\" />\n      <FormField>\n        <Checkbox\n          checked={tc && news}\n          indeterminate={tc !== news}\n          onChange={toggleAll}\n        >\n          Accept All\n        </Checkbox>\n        <Checkbox checked={tc} onChange={ev => setTc(ev.target.checked)}>\n          Accept Terms & Conditions\n        </Checkbox>\n        <Checkbox checked={news} onChange={ev => setNews(ev.target.checked)}>\n          Receive Newsletter\n        </Checkbox>\n      </FormField>\n      <FormField>\n        <Button type=\"submit\" buttonType=\"primary\">\n          Save\n        </Button>\n        <Button type=\"reset\">Cancel</Button>\n      </FormField>\n    </Form>\n  );\n};\n\nrender(<FullForm />);\n")),l.a.createElement(c.MDXTag,{name:"h3",components:n},"Vertical"),l.a.createElement(c.MDXTag,{name:"p",components:n},"A form can have a vertical layout."),l.a.createElement(c.MDXTag,{name:"pre",components:n},l.a.createElement(c.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:"live withRender",live:!0,withRender:!0}},"// import { user, lock } from 'icon-packs/feather';\n// import { code } from 'icon-packs/devicons';\n\nconst options = [\n  { value: 'JavaScript' },\n  { value: 'Java' },\n  { value: 'PHP' },\n  { value: 'Perl' },\n  { value: 'C' },\n  { value: 'Lua' },\n  { value: 'C++' },\n  { value: 'Rust' }\n];\n\nconst radioOptions = [\n  { label: 'Javascript', value: 'js' },\n  { label: 'Typescript', value: 'ts' },\n  { label: 'Coffescript', value: 'coffee' }\n];\n\nconst FullForm = () => {\n  const [tc, setTc] = useState(false);\n  const [news, setNews] = useState(true);\n\n  function toggleAll() {\n    if (tc && news) {\n      setTc(false);\n      setNews(false);\n    } else {\n      setTc(true);\n      setNews(true);\n    }\n  }\n\n  return (\n    <Form onSubmit={ev => ev.preventDefault()} layout=\"vertical\">\n      <FormFieldTextInput label=\"Username\" icon={user} />\n      <FormFieldPasswordInput label=\"Password\" icon={lock} />\n      <FormFieldSelect label=\"Language\" options={options} />\n      <FormFieldRadioGroup\n        label=\"Flavour\"\n        options={radioOptions}\n        name=\"flavour\"\n      />\n      <FormFieldTextArea label=\"Comment\" />\n      <FormField>\n        <Checkbox\n          checked={tc && news}\n          indeterminate={tc !== news}\n          onChange={toggleAll}\n        >\n          Accept All\n        </Checkbox>\n        <Checkbox checked={tc} onChange={ev => setTc(ev.target.checked)}>\n          Accept Terms & Conditions\n        </Checkbox>\n        <Checkbox checked={news} onChange={ev => setNews(ev.target.checked)}>\n          Receive Newsletter\n        </Checkbox>\n      </FormField>\n      <FormField>\n        <Button type=\"submit\" buttonType=\"primary\">\n          Save\n        </Button>\n        <Button type=\"reset\">Cancel</Button>\n      </FormField>\n    </Form>\n  );\n};\n\nrender(<FullForm />);\n")))}}}]);
//# sourceMappingURL=28.36754161.chunk.js.map