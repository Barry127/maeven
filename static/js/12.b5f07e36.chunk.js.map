{"version":3,"sources":["../node_modules/.cache/mdx.macro/1kxsMI.b7383eec3b.mdx.js"],"names":["_ref","components","_objectWithoutProperties","React","createElement","MDXTag","name","Description","of","Props","parentName","props","DoDont","do","dont"],"mappings":"mGAAA,2DAKgB,mBAAUA,GACxB,IAAIC,EAAaD,EAAKC,WACVC,YAAyBF,EAAM,CAAC,eAE5C,OAAoBG,IAAMC,cAAcC,SAAQ,CAC9CC,KAAM,UACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,KACNL,WAAYA,GACX,QAAsBE,IAAMC,cAAcG,IAAa,CACxDC,GAAI,SACWL,IAAMC,cAAcC,SAAQ,CAC3CC,KAAM,KACNL,WAAYA,GACX,SAAuBE,IAAMC,cAAcK,IAAO,CACnDD,GAAI,SACWL,IAAMC,cAAcC,SAAQ,CAC3CC,KAAM,KACNL,WAAYA,GACX,YAA0BE,IAAMC,cAAcC,SAAQ,CACvDC,KAAM,KACNL,WAAYA,GACX,SAAuBE,IAAMC,cAAcC,SAAQ,CACpDC,KAAM,IACNL,WAAYA,GACX,uCAAqDE,IAAMC,cAAcC,SAAQ,CAClFC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,uiCAAqjCR,IAAMC,cAAcC,SAAQ,CACllCC,KAAM,KACNL,WAAYA,GACX,aAA2BE,IAAMC,cAAcC,SAAQ,CACxDC,KAAM,IACNL,WAAYA,GACX,4EAA0FE,IAAMC,cAAcC,SAAQ,CACvHC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,koCAAgpCR,IAAMC,cAAcC,SAAQ,CAC7qCC,KAAM,KACNL,WAAYA,GACX,eAA6BE,IAAMC,cAAcC,SAAQ,CAC1DC,KAAM,IACNL,WAAYA,GACX,qEAAmFE,IAAMC,cAAcC,SAAQ,CAChHC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,stCAAouCR,IAAMC,cAAcC,SAAQ,CACjwCC,KAAM,KACNL,WAAYA,GACX,WAAyBE,IAAMC,cAAcC,SAAQ,CACtDC,KAAM,IACNL,WAAYA,GACX,uCAAqDE,IAAMC,cAAcC,SAAQ,CAClFC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,s1BAAo2BR,IAAMC,cAAcC,SAAQ,CACj4BC,KAAM,KACNL,WAAYA,GACX,qBAAmCE,IAAMC,cAAcC,SAAQ,CAChEC,KAAM,IACNL,WAAYA,GACX,yCAAuDE,IAAMC,cAAcQ,IAAQ,CACpFC,GAAI,CAAC,wCACLC,KAAM,CAAC","file":"static/js/12.b5f07e36.chunk.js","sourcesContent":["import _objectWithoutProperties from \"/home/barry/Documents/projects/maeven/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Card } from 'maeven';\nimport { Description, DoDont, Props } from 'docs/components';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, \"Card\"), /*#__PURE__*/React.createElement(Description, {\n    of: \"Card\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Props\"), /*#__PURE__*/React.createElement(Props, {\n    of: \"Card\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Examples\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Basic\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A basic usage of Card wit an image.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"// import skyline from '@assets/skyline.jpg';\\n// import bubbles from '@assets/bubbles.jpg';\\n// import trees from '@assets/trees.jpg';\\n\\n<Container>\\n  <Row gutter={1}>\\n    <Col span={8}>\\n      <Card>\\n        <CardImage src={skyline} />\\n        <H3>Title</H3>\\n        <P>Card content with a short text containing a description.</P>\\n        <P>\\n          <Button buttonType=\\\"primary\\\">Call To Action</Button>\\n        </P>\\n      </Card>\\n    </Col>\\n    <Col span={8}>\\n      <Card>\\n        <CardImage src={bubbles} />\\n        <H3>Title</H3>\\n        <P>Card content with a short text containing a description.</P>\\n        <P>\\n          <Button buttonType=\\\"primary\\\">Call To Action</Button>\\n        </P>\\n      </Card>\\n    </Col>\\n    <Col span={8}>\\n      <Card>\\n        <CardImage src={trees} />\\n        <H3>Title</H3>\\n        <P>Card content with a short text containing a description.</P>\\n        <P>\\n          <Button buttonType=\\\"primary\\\">Call To Action</Button>\\n        </P>\\n      </Card>\\n    </Col>\\n  </Row>\\n</Container>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Elevation\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Cards can have different elevations (heights) styled with a drop shadow.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"// import skyline from '@assets/skyline.jpg';\\n\\n<Container>\\n  <Row gutter={1} wrap={false}>\\n    <Col>\\n      <Card elevation={0}>\\n        <CardImage src={skyline} />\\n        <H3>Elevation 0</H3>\\n        <P>Card content with a short text containing a description.</P>\\n      </Card>\\n    </Col>\\n    <Col>\\n      <Card elevation={1}>\\n        <CardImage src={skyline} />\\n        <H3>Elevation 1</H3>\\n        <P>Card content with a short text containing a description.</P>\\n      </Card>\\n    </Col>\\n    <Col>\\n      <Card elevation={2}>\\n        <CardImage src={skyline} />\\n        <H3>Elevation 2</H3>\\n        <P>Card content with a short text containing a description.</P>\\n      </Card>\\n    </Col>\\n    <Col>\\n      <Card elevation={3}>\\n        <CardImage src={skyline} />\\n        <H3>Elevation 3</H3>\\n        <P>Card content with a short text containing a description.</P>\\n      </Card>\\n    </Col>\\n    <Col>\\n      <Card elevation={4}>\\n        <CardImage src={skyline} />\\n        <H3>Elevation 4</H3>\\n        <P>Card content with a short text containing a description.</P>\\n      </Card>\\n    </Col>\\n  </Row>\\n</Container>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Interactive\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"When card is interactive it responds to mouse over and tab focus.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"// import skyline from '@assets/skyline.jpg';\\n// import bubbles from '@assets/bubbles.jpg';\\n// import trees from '@assets/trees.jpg';\\n\\n<Container>\\n  <Row gutter={1}>\\n    <Col span={8}>\\n      <Card interactive onClick={() => console.log('clicked skyline')}>\\n        <CardImage src={skyline} />\\n        <H3>Title</H3>\\n        <P>Card content with a short text containing a description.</P>\\n        <P>\\n          <Button buttonType=\\\"primary\\\">Call To Action</Button>\\n        </P>\\n      </Card>\\n    </Col>\\n    <Col span={8}>\\n      <Card interactive onClick={() => console.log('clicked bubbles')}>\\n        <CardImage src={bubbles} />\\n        <H3>Title</H3>\\n        <P>Card content with a short text containing a description.</P>\\n        <P>\\n          <Button buttonType=\\\"primary\\\">Call To Action</Button>\\n        </P>\\n      </Card>\\n    </Col>\\n    <Col span={8}>\\n      <Card interactive onClick={() => console.log('clicked trees')}>\\n        <CardImage src={trees} />\\n        <H3>Title</H3>\\n        <P>Card content with a short text containing a description.</P>\\n        <P>\\n          <Button buttonType=\\\"primary\\\">Call To Action</Button>\\n        </P>\\n      </Card>\\n    </Col>\\n  </Row>\\n</Container>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Overlay\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"An overlay appears on a mouse over.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"// import skyline from '@assets/skyline.jpg';\\n// import bubbles from '@assets/bubbles.jpg';\\n// import trees from '@assets/trees.jpg';\\n\\n<Container>\\n  <Row gutter={1}>\\n    <Col span={8}>\\n      <Card\\n        overlay={\\n          <Text color=\\\"white\\\">\\n            <h2>Skyline</h2>\\n          </Text>\\n        }\\n      >\\n        <CardImage src={skyline} />\\n      </Card>\\n    </Col>\\n    <Col span={8}>\\n      <Card\\n        overlay={\\n          <Text color=\\\"white\\\">\\n            <h2>Bubbles</h2>\\n          </Text>\\n        }\\n      >\\n        <CardImage src={bubbles} />\\n      </Card>\\n    </Col>\\n    <Col span={8}>\\n      <Card\\n        overlay={\\n          <Text color=\\\"white\\\">\\n            <h2>Trees</h2>\\n          </Text>\\n        }\\n      >\\n        <CardImage src={trees} />\\n      </Card>\\n    </Col>\\n  </Row>\\n</Container>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Design Guidelines\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Use cards to group content in the ui.\"), /*#__PURE__*/React.createElement(DoDont, {\n    do: ['Use Cards in combination with a Grid'],\n    dont: ['Use interactive style without an Onclick action']\n  }));\n});"],"sourceRoot":""}