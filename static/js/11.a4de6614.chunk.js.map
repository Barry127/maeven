{"version":3,"sources":["../node_modules/.cache/mdx.macro/1j7bOn.3a30452920.mdx.js"],"names":["_ref","components","_objectWithoutProperties","React","createElement","MDXTag","name","Description","of","Props","parentName","props","DoDont","do","dont"],"mappings":"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","file":"static/js/11.a4de6614.chunk.js","sourcesContent":["import _objectWithoutProperties from \"/home/barry/Documents/projects/maeven/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Text } from 'maeven';\nimport { Description, DoDont, Props } from 'docs/components';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, \"Text\"), /*#__PURE__*/React.createElement(Description, {\n    of: \"Text\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Props\"), /*#__PURE__*/React.createElement(Props, {\n    of: \"Text\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Examples\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Basic\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A basic usage of Text.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Text>\\n  Kid, I've flown from one side of this galaxy to the other. I've seen a lot of\\n  strange stuff, but I've never seen anything to make me believe there's one\\n  all-powerful Force controlling everything.\\n</Text>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Inline\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Text can be an inline (\", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"span\"), \") or block (\", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"div\"), \") element.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Text>\\n  Kid, I've flown from one side of this galaxy to the other.{' '}\\n  <Text inline color=\\\"indigo\\\">\\n    I've seen a lot of strange stuff\\n  </Text>\\n  , but I've never seen anything to make me believe there's one all-powerful Force\\n  controlling everything. <Text color=\\\"orange\\\">\\n    There's no mystical energy field that controls my destiny.\\n  </Text> It's all a lot of simple tricks and nonsense.\\n</Text>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Style HTML\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Text can style all native html elements with current theme style.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Text styleHtml>\\n  <h1>Hey, Luke! May the Force be with you.</h1>\\n  <p>\\n    You're all clear, kid. Let's blow this thing and <a href=\\\"#\\\">go home</a>!\\n    Hokey religions and ancient weapons are no match for a good blaster at your\\n    side, kid. Still, she's got a lot of spirit. I don't know, what do you\\n    think?\\n  </p>\\n  <p>\\n    Dantooine. They're on Dantooine. Oh God, my uncle. How am I ever gonna\\n    explain this? I'm trying not to, kid. The more you tighten your grip,\\n    Tarkin, the more star systems will slip through your fingers.\\n  </p>\\n  <h2>Obi-Wan is here. The Force is with him.</h2>\\n  <p>\\n    Don't be too proud of this technological terror you've constructed. The\\n    ability to destroy a planet is insignificant next to the power of the Force.\\n    But with the blast shield down, I can't even see! How am I supposed to\\n    fight?\\n  </p>\\n  <ol>\\n    <li>You are a part of the Rebel Alliance and a traitor! Take her away!</li>\\n    <li>The Force is strong with this one. I have you now.</li>\\n    <li>He is here.</li>\\n  </ol>\\n  <h3>\\n    Alderaan? I'm not going to Alderaan. I've got to go home. It's late, I'm in\\n    for it as it is.\\n  </h3>\\n  <p>\\n    Kid, I've flown from one side of this galaxy to the other. I've seen a lot\\n    of strange stuff, but I've never seen anything to make me believe there's\\n    one all-powerful Force controlling everything. There's no mystical energy\\n    field that controls my destiny. It's all a lot of simple tricks and\\n    nonsense. Don't be too proud of this technological terror you've\\n    constructed. The ability to destroy a planet is insignificant next to the\\n    power of the Force.\\n  </p>\\n  <ul>\\n    <li>Escape is not his plan. I must face him, alone.</li>\\n    <li>Ye-ha!</li>\\n    <li>You're all clear, kid. Let's blow this thing and go home!</li>\\n  </ul>\\n</Text>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Color\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Text can be styled in different (theme) colors.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<div style={{ columns: '2 auto' }}>\\n  <Text color=\\\"black\\\">Black</Text>\\n  <Text color=\\\"blue\\\">Blue</Text>\\n  <Text color=\\\"cyan\\\">Cyan</Text>\\n  <Text color=\\\"darkGrey\\\">DarkGrey</Text>\\n  <Text color=\\\"green\\\">Green</Text>\\n  <Text color=\\\"grey\\\">Grey</Text>\\n  <Text color=\\\"indigo\\\">Indigo</Text>\\n  <Text color=\\\"orange\\\">Orange</Text>\\n  <Text color=\\\"pink\\\">Pink</Text>\\n  <Text color=\\\"purple\\\">Purple</Text>\\n  <Text color=\\\"red\\\">Red</Text>\\n  <Text color=\\\"teal\\\">Teal</Text>\\n  <Text color=\\\"white\\\">White</Text>\\n  <Text color=\\\"yellow\\\">Yellow</Text>\\n  <Text color=\\\"primary\\\">Primary</Text>\\n  <Text color=\\\"secondary\\\">Secondary</Text>\\n  <Text color=\\\"success\\\">Success</Text>\\n  <Text color=\\\"info\\\">Info</Text>\\n  <Text color=\\\"warning\\\">Warning</Text>\\n  <Text color=\\\"danger\\\">Danger</Text>\\n</div>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Truncate\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Truncate text with ellipsis when text is longer than one line. Only works when inline is \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"false\"), \".\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<div style={{ width: 400 }}>\\n  <Text truncate>\\n    A tremor in the Force. The last time I felt it was in the presence of my old\\n    master. What good is a reward if you ain't around to use it? Besides,\\n    attacking that battle station ain't my idea of courage. It's more\\n    like\\u2026suicide.\\n  </Text>\\n</div>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Design Guidelines\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Use the \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Text\"), \" Component to style text in components or on a page.\"), /*#__PURE__*/React.createElement(DoDont, {\n    do: ['Use Text with styleHtml for large amounts of static text'],\n    dont: ['Use Text when a specified component is more appropriate (e.g. Header, Link)']\n  }));\n});"],"sourceRoot":""}