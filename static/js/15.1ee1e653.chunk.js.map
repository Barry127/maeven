{"version":3,"sources":["../node_modules/.cache/mdx.macro/25sCQ9.f8d7248097.mdx.js"],"names":["_ref","components","_objectWithoutProperties","React","createElement","MDXTag","name","Description","of","Props","parentName","props"],"mappings":"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","file":"static/js/15.1ee1e653.chunk.js","sourcesContent":["import _objectWithoutProperties from \"/home/barry/Documents/projects/maeven/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Button } from 'maeven';\nimport { Description, DoDont, Props } from 'docs/components';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, \"Button\"), /*#__PURE__*/React.createElement(Description, {\n    of: \"Button\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Props\"), /*#__PURE__*/React.createElement(Props, {\n    of: \"Button\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Examples\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Basic\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A basic usage of Button.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Button onClick={() => alert('Button Clicked')}>Click Me!</Button>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"buttonType\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Buttons can by styled as different type of buttons.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Block padding>\\n  <P>\\n    <Button buttonType=\\\"primary\\\">Primary</Button> <Button>Default</Button>{' '}\\n    <Button buttonType=\\\"link\\\">Link</Button>{' '}\\n    <Button buttonType=\\\"success\\\">Success</Button>{' '}\\n    <Button buttonType=\\\"warning\\\">Warning</Button>{' '}\\n    <Button buttonType=\\\"danger\\\">Danger</Button>\\n  </P>\\n  <P>\\n    <Button disabled buttonType=\\\"primary\\\">\\n      Disabled Primary\\n    </Button>{' '}\\n    <Button disabled>Disabled Default</Button>{' '}\\n    <Button disabled buttonType=\\\"link\\\">\\n      Disabled Link\\n    </Button>{' '}\\n    <Button disabled buttonType=\\\"success\\\">\\n      Disabled Success\\n    </Button>{' '}\\n    <Button disabled buttonType=\\\"warning\\\">\\n      Disabled Warning\\n    </Button>{' '}\\n    <Button disabled buttonType=\\\"danger\\\">\\n      Disabled Danger\\n    </Button>\\n  </P>\\n</Block>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Icons\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A button can contain icons.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"// import { refreshCw } from 'icon-packs/feather';\\n// import {\\n//   userCircleSolid,\\n//   caretDownSolid,\\n//   arrowLeftSolid,\\n//   arrowRightSolid,\\n//   fileRegular,\\n//   timesSolid,\\n//   plusSolid\\n// } from 'icon-packs/fa';\\n\\n<>\\n  <Button buttonType=\\\"primary\\\" icon={refreshCw}>\\n    Refresh\\n  </Button>{' '}\\n  <Button icon={userCircleSolid} iconRight={caretDownSolid}>\\n    Profile\\n  </Button>{' '}\\n  <Button buttonType=\\\"warning\\\" iconRight={arrowRightSolid}>\\n    Next\\n  </Button>{' '}\\n  <Button icon={fileRegular} iconRight={timesSolid}>\\n    Upload...\\n  </Button>{' '}\\n  <Button buttonType=\\\"success\\\" icon={plusSolid} />{' '}\\n  <Button icon={arrowLeftSolid} iconRight={arrowRightSolid} />\\n</>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Loading\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Buttons can have a loading state.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live withRender\",\n      \"live\": true,\n      \"withRender\": true\n    }\n  }, \"// import { refreshCw } from 'icon-packs/feather';\\n\\nconst Example = () => {\\n  const [loading, setLoading] = useState(false);\\n\\n  useEffect(() => {\\n    if (loading) {\\n      const to = setTimeout(() => {\\n        setLoading(false);\\n      }, 3000);\\n    }\\n  }, [loading]);\\n\\n  return (\\n    <Button\\n      buttonType=\\\"primary\\\"\\n      icon={refreshCw}\\n      loading={loading}\\n      onClick={() => setLoading(true)}\\n    >\\n      Click to toggle\\n    </Button>\\n  );\\n};\\n\\nrender(<Example />);\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Sizes\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Buttons can have different sizes.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<>\\n  <Button icon={userCircleSolid} buttonType=\\\"primary\\\" size=\\\"sm\\\">\\n    Small Button\\n  </Button>{' '}\\n  <Button icon={userCircleSolid} buttonType=\\\"primary\\\" size=\\\"md\\\">\\n    Medium Button\\n  </Button>{' '}\\n  <Button icon={userCircleSolid} buttonType=\\\"primary\\\" size=\\\"lg\\\">\\n    Large Button\\n  </Button>\\n</>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Fluid\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A fluid button takes up the full width.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Button buttonType=\\\"primary\\\" fluid size=\\\"lg\\\">\\n  Fluid Button\\n</Button>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Active\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A button can be styled to indacte it is active.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<>\\n  <Button buttonType=\\\"primary\\\">Normal</Button>{' '}\\n  <Button buttonType=\\\"primary\\\" active>\\n    Active\\n  </Button>\\n</>\\n\")));\n});"],"sourceRoot":""}