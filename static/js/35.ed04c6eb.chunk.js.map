{"version":3,"sources":["../node_modules/.cache/mdx.macro/Z1jx2Lb.0a21a00754.mdx.js"],"names":["_ref","components","_objectWithoutProperties","React","createElement","MDXTag","name","Description","of","Props","parentName","props"],"mappings":"mGAAA,2DAKgB,mBAAUA,GACxB,IAAIC,EAAaD,EAAKC,WACVC,YAAyBF,EAAM,CAAC,eAE5C,OAAoBG,IAAMC,cAAcC,SAAQ,CAC9CC,KAAM,UACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,KACNL,WAAYA,GACX,WAAyBE,IAAMC,cAAcG,IAAa,CAC3DC,GAAI,YACWL,IAAMC,cAAcC,SAAQ,CAC3CC,KAAM,KACNL,WAAYA,GACX,SAAuBE,IAAMC,cAAcK,IAAO,CACnDD,GAAI,YACWL,IAAMC,cAAcC,SAAQ,CAC3CC,KAAM,KACNL,WAAYA,GACX,YAA0BE,IAAMC,cAAcC,SAAQ,CACvDC,KAAM,KACNL,WAAYA,GACX,SAAuBE,IAAMC,cAAcC,SAAQ,CACpDC,KAAM,IACNL,WAAYA,GACX,6BAA2CE,IAAMC,cAAcC,SAAQ,CACxEC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,kBAAgCR,IAAMC,cAAcC,SAAQ,CAC7DC,KAAM,KACNL,WAAYA,GACX,QAAsBE,IAAMC,cAAcC,SAAQ,CACnDC,KAAM,IACNL,WAAYA,GACX,4BAA0CE,IAAMC,cAAcC,SAAQ,CACvEC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,yCAAyDR,IAAMC,cAAcC,SAAQ,CACtFC,KAAM,KACNL,WAAYA,GACX,SAAuBE,IAAMC,cAAcC,SAAQ,CACpDC,KAAM,IACNL,WAAYA,GACX,sCAAoDE,IAAMC,cAAcC,SAAQ,CACjFC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,qTAAiVR,IAAMC,cAAcC,SAAQ,CAC9WC,KAAM,KACNL,WAAYA,GACX,SAAuBE,IAAMC,cAAcC,SAAQ,CACpDC,KAAM,IACNL,WAAYA,GACX,uDAAqEE,IAAMC,cAAcC,SAAQ,CAClGC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,OACd,MAAQ,IAET,oxBAAo2BR,IAAMC,cAAcC,SAAQ,CACj4BC,KAAM,KACNL,WAAYA,GACX,mBAAiCE,IAAMC,cAAcC,SAAQ,CAC9DC,KAAM,IACNL,WAAYA,GACX,4CAA0DE,IAAMC,cAAcC,SAAQ,CACvFC,KAAM,aACNL,WAAYA,EACZS,WAAY,KACX,YAAa,cAA4BP,IAAMC,cAAcC,SAAQ,CACtEC,KAAM,aACNL,WAAYA,EACZS,WAAY,KACX,QAAS,KAAmBP,IAAMC,cAAcC,SAAQ,CACzDC,KAAM,MACNL,WAAYA,GACEE,IAAMC,cAAcC,SAAQ,CAC1CC,KAAM,OACNL,WAAYA,EACZS,WAAY,MACZC,MAAO,CACL,UAAa,cACb,WAAc,kBACd,MAAQ,EACR,YAAc,IAEf","file":"static/js/35.ed04c6eb.chunk.js","sourcesContent":["import _objectWithoutProperties from \"/home/barry/Documents/projects/maeven/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { Spinner } from 'maeven';\nimport { Description, DoDont, Props } from 'docs/components';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, \"Spinner\"), /*#__PURE__*/React.createElement(Description, {\n    of: \"Spinner\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Props\"), /*#__PURE__*/React.createElement(Props, {\n    of: \"Spinner\"\n  }), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Examples\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Basic\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A basic usage of Spinner.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Spinner />\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Text\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A spinner can have text.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Spinner text=\\\"Loading data...\\\" />\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Sizes\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Spinners can have different sizes.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Row gutter={1}>\\n  <Col span={24}>\\n    <Spinner size=\\\"sm\\\" text=\\\"Small\\\" />\\n  </Col>\\n  <Col span={24}>\\n    <Spinner size=\\\"md\\\" text=\\\"Medium\\\" />\\n  </Col>\\n  <Col span={24}>\\n    <Spinner size=\\\"lg\\\" text=\\\"Large\\\" />\\n  </Col>\\n  <Col span={24}>\\n    <Spinner size={100} text=\\\"100px\\\" />\\n  </Col>\\n</Row>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Color\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Spinners can be styled in different (theme) colors.\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<div style={{ columns: '4 auto' }}>\\n  <Spinner color=\\\"black\\\" text=\\\"Black\\\" />\\n  <Spinner color=\\\"white\\\" text=\\\"White\\\" />\\n  <Spinner color=\\\"darkGrey\\\" text=\\\"DarkGrey\\\" />\\n  <Spinner color=\\\"grey\\\" text=\\\"Grey\\\" />\\n  <Spinner color=\\\"lightGrey\\\" text=\\\"LightGrey\\\" />\\n  <Spinner color=\\\"red\\\" text=\\\"Red\\\" />\\n  <Spinner color=\\\"orange\\\" text=\\\"Orange\\\" />\\n  <Spinner color=\\\"yellow\\\" text=\\\"Yellow\\\" />\\n  <Spinner color=\\\"green\\\" text=\\\"Green\\\" />\\n  <Spinner color=\\\"teal\\\" text=\\\"Teal\\\" />\\n  <Spinner color=\\\"blue\\\" text=\\\"Blue\\\" />\\n  <Spinner color=\\\"indigo\\\" text=\\\"Indigo\\\" />\\n  <Spinner color=\\\"pink\\\" text=\\\"Pink\\\" />\\n  <Spinner color=\\\"primary\\\" text=\\\"Primary\\\" />\\n  <Spinner color=\\\"success\\\" text=\\\"Success\\\" />\\n  <Spinner color=\\\"warning\\\" text=\\\"Warning\\\" />\\n  <Spinner color=\\\"danger\\\" text=\\\"Danger\\\" />\\n</div>\\n\")), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Spinner overlay\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A Spinner can overlay it's children when \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"spinning\"), \" is set to \", /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"true\"), \".\"), /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, /*#__PURE__*/React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live withRender\",\n      \"live\": true,\n      \"withRender\": true\n    }\n  }, \"// import skyline from '@assets/skyline.jpg';\\n// import bubbles from '@assets/bubbles.jpg';\\n\\nconst Component = () => {\\n  const [s1, setS1] = useState(true);\\n  const [s2, setS2] = useState(false);\\n  return (\\n    <Container>\\n      <Row gutter={1}>\\n        <Col span={12}>\\n          <Card>\\n            <Spinner spinning={s1} size={96} color=\\\"primary\\\" text=\\\"Loading\\\">\\n              <CardImage src={skyline} />\\n              <H3>Title</H3>\\n              <P style={{ paddingBottom: 'var(--maeven-base)' }}>\\n                Card content with a short text containing a description.\\n              </P>\\n            </Spinner>\\n            <P>\\n              <Button buttonType=\\\"primary\\\" onClick={() => setS1(!s1)}>\\n                Toggle Spinning\\n              </Button>\\n            </P>\\n          </Card>\\n        </Col>\\n        <Col span={12}>\\n          <Card>\\n            <Spinner spinning={s2} size={96} color=\\\"primary\\\" delay={200}>\\n              <CardImage src={bubbles} />\\n              <H3>Delay</H3>\\n              <P style={{ paddingBottom: 'var(--maeven-base)' }}>\\n                This Spinner will wait for 200ms before showing, this allows to\\n                show content without showing just a quickly flashing spinner.\\n              </P>\\n            </Spinner>\\n            <P>\\n              <Button buttonType=\\\"primary\\\" onClick={() => setS2(!s2)}>\\n                Toggle Spinning\\n              </Button>\\n            </P>\\n          </Card>\\n        </Col>\\n      </Row>\\n    </Container>\\n  );\\n};\\n\\nrender(<Component />);\\n\")));\n});"],"sourceRoot":""}