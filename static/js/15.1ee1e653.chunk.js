(this.webpackJsonpmaeven=this.webpackJsonpmaeven||[]).push([[15],{579:function(n,e,t){"use strict";t.r(e);var a=t(3),o=t(0),r=t.n(o),i=t(559),m=(t(2),t(560));e.default=function(n){var e=n.components;Object(a.a)(n,["components"]);return r.a.createElement(i.MDXTag,{name:"wrapper",components:e},r.a.createElement(i.MDXTag,{name:"h1",components:e},"Button"),r.a.createElement(m.a,{of:"Button"}),r.a.createElement(i.MDXTag,{name:"h2",components:e},"Props"),r.a.createElement(m.d,{of:"Button"}),r.a.createElement(i.MDXTag,{name:"h2",components:e},"Examples"),r.a.createElement(i.MDXTag,{name:"h3",components:e},"Basic"),r.a.createElement(i.MDXTag,{name:"p",components:e},"A basic usage of Button."),r.a.createElement(i.MDXTag,{name:"pre",components:e},r.a.createElement(i.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:"live",live:!0}},"<Button onClick={() => alert('Button Clicked')}>Click Me!</Button>\n")),r.a.createElement(i.MDXTag,{name:"h3",components:e},"buttonType"),r.a.createElement(i.MDXTag,{name:"p",components:e},"Buttons can by styled as different type of buttons."),r.a.createElement(i.MDXTag,{name:"pre",components:e},r.a.createElement(i.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:"live",live:!0}},'<Block padding>\n  <P>\n    <Button buttonType="primary">Primary</Button> <Button>Default</Button>{\' \'}\n    <Button buttonType="link">Link</Button>{\' \'}\n    <Button buttonType="success">Success</Button>{\' \'}\n    <Button buttonType="warning">Warning</Button>{\' \'}\n    <Button buttonType="danger">Danger</Button>\n  </P>\n  <P>\n    <Button disabled buttonType="primary">\n      Disabled Primary\n    </Button>{\' \'}\n    <Button disabled>Disabled Default</Button>{\' \'}\n    <Button disabled buttonType="link">\n      Disabled Link\n    </Button>{\' \'}\n    <Button disabled buttonType="success">\n      Disabled Success\n    </Button>{\' \'}\n    <Button disabled buttonType="warning">\n      Disabled Warning\n    </Button>{\' \'}\n    <Button disabled buttonType="danger">\n      Disabled Danger\n    </Button>\n  </P>\n</Block>\n')),r.a.createElement(i.MDXTag,{name:"h3",components:e},"Icons"),r.a.createElement(i.MDXTag,{name:"p",components:e},"A button can contain icons."),r.a.createElement(i.MDXTag,{name:"pre",components:e},r.a.createElement(i.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:"live",live:!0}},"// import { refreshCw } from 'icon-packs/feather';\n// import {\n//   userCircleSolid,\n//   caretDownSolid,\n//   arrowLeftSolid,\n//   arrowRightSolid,\n//   fileRegular,\n//   timesSolid,\n//   plusSolid\n// } from 'icon-packs/fa';\n\n<>\n  <Button buttonType=\"primary\" icon={refreshCw}>\n    Refresh\n  </Button>{' '}\n  <Button icon={userCircleSolid} iconRight={caretDownSolid}>\n    Profile\n  </Button>{' '}\n  <Button buttonType=\"warning\" iconRight={arrowRightSolid}>\n    Next\n  </Button>{' '}\n  <Button icon={fileRegular} iconRight={timesSolid}>\n    Upload...\n  </Button>{' '}\n  <Button buttonType=\"success\" icon={plusSolid} />{' '}\n  <Button icon={arrowLeftSolid} iconRight={arrowRightSolid} />\n</>\n")),r.a.createElement(i.MDXTag,{name:"h3",components:e},"Loading"),r.a.createElement(i.MDXTag,{name:"p",components:e},"Buttons can have a loading state."),r.a.createElement(i.MDXTag,{name:"pre",components:e},r.a.createElement(i.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:"live withRender",live:!0,withRender:!0}},"// import { refreshCw } from 'icon-packs/feather';\n\nconst Example = () => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (loading) {\n      const to = setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n    }\n  }, [loading]);\n\n  return (\n    <Button\n      buttonType=\"primary\"\n      icon={refreshCw}\n      loading={loading}\n      onClick={() => setLoading(true)}\n    >\n      Click to toggle\n    </Button>\n  );\n};\n\nrender(<Example />);\n")),r.a.createElement(i.MDXTag,{name:"h3",components:e},"Sizes"),r.a.createElement(i.MDXTag,{name:"p",components:e},"Buttons can have different sizes."),r.a.createElement(i.MDXTag,{name:"pre",components:e},r.a.createElement(i.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:"live",live:!0}},'<>\n  <Button icon={userCircleSolid} buttonType="primary" size="sm">\n    Small Button\n  </Button>{\' \'}\n  <Button icon={userCircleSolid} buttonType="primary" size="md">\n    Medium Button\n  </Button>{\' \'}\n  <Button icon={userCircleSolid} buttonType="primary" size="lg">\n    Large Button\n  </Button>\n</>\n')),r.a.createElement(i.MDXTag,{name:"h3",components:e},"Fluid"),r.a.createElement(i.MDXTag,{name:"p",components:e},"A fluid button takes up the full width."),r.a.createElement(i.MDXTag,{name:"pre",components:e},r.a.createElement(i.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:"live",live:!0}},'<Button buttonType="primary" fluid size="lg">\n  Fluid Button\n</Button>\n')),r.a.createElement(i.MDXTag,{name:"h3",components:e},"Active"),r.a.createElement(i.MDXTag,{name:"p",components:e},"A button can be styled to indacte it is active."),r.a.createElement(i.MDXTag,{name:"pre",components:e},r.a.createElement(i.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:"live",live:!0}},'<>\n  <Button buttonType="primary">Normal</Button>{\' \'}\n  <Button buttonType="primary" active>\n    Active\n  </Button>\n</>\n')))}}}]);
//# sourceMappingURL=15.1ee1e653.chunk.js.map