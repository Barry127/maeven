{"version":3,"sources":["../node_modules/.cache/mdx.macro/1GuBYo.e3c9b9469d.mdx.js"],"names":["_ref","components","_objectWithoutProperties","React","createElement","MDXTag","name","Description","of","Props","parentName","props","Alert","type","AlertGroup","icon","shieldOff","DoDont","do","dont"],"mappings":"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","file":"static/js/10.20421709.chunk.js","sourcesContent":["import _objectWithoutProperties from \"/home/barry/Documents/projects/maeven/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nimport { shieldOff } from 'icon-packs/feather';\nimport { Alert, AlertGroup } from 'maeven';\nimport { Description, DoDont, Props } from 'docs/components';\nexport default (function (_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h1\",\n    components: components\n  }, \"Alert\"), React.createElement(Description, {\n    of: \"Alert\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Props\"), React.createElement(Props, {\n    of: \"Alert\"\n  }), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Examples\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Basic\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A basic usage of Alert.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Alert>A basic Alert message.</Alert>\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Controlled\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A Controlled Alert\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live withRender\",\n      \"live\": true,\n      \"withRender\": true\n    }\n  }, \"const Controller = props => {\\n  const [isOpen, setOpen] = useState(true);\\n\\n  const onClose = () => {\\n    setOpen(false);\\n  };\\n\\n  const toggle = () => {\\n    setOpen(!isOpen);\\n  };\\n\\n  return (\\n    <Text>\\n      <H4>Toggle Alert</H4>\\n      <Alert {...props} animateOnOpen isOpen={isOpen} onClose={onClose}>\\n        This is a controlled Alert.\\n      </Alert>\\n      <Button onClick={toggle}>Toggle</Button>\\n    </Text>\\n  );\\n};\\n\\nrender(<Controller />);\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Types\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Alerts can be styled in four different types.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Row gutter={1}>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"info\\\">Info Alert</Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"success\\\">Success Alert</Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"warning\\\">Warning Alert</Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"danger\\\">Danger Alert</Alert>\\n  </Col>\\n</Row>\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Title\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Alerts can have a title.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Row gutter={1}>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"info\\\" title=\\\"Info Title\\\">\\n      Info message content.\\n    </Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"success\\\" title=\\\"Success Title\\\">\\n      Success message content.\\n    </Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"warning\\\" title=\\\"Warning Title\\\">\\n      Warning message content.\\n    </Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"danger\\\" title=\\\"Danger Title\\\">\\n      Danger message content.\\n    </Alert>\\n  </Col>\\n</Row>\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Closable\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Alerts with the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"closable\"), \" prop set to \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"false\"), \" have no close button.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Row gutter={1}>\\n  <Col transparent span={12}>\\n    <Alert type=\\\"success\\\">This Alert is closable.</Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert title=\\\"Not closable\\\" closable={false}>\\n      This alert has no close button.\\n    </Alert>\\n  </Col>\\n</Row>\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Icon\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Alerts can be shown without an icon.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Row gutter={1}>\\n  <Col transparent span={12}>\\n    <Alert>This Alert has an icon.</Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert showIcon={false}>This alert has no icon.</Alert>\\n  </Col>\\n</Row>\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Custom Icon\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Alerts can have a custom icon.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"// import { shieldOff } from 'icon-packs/feather'\\n\\n<Alert type=\\\"warning\\\" icon={shieldOff} title=\\\"Warning\\\">\\n  Virus protection is disabled!\\n</Alert>\\n\")), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Closing Alerts\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"onClose\"), \" and \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"afterClose\"), \" give the option to hook into the closing of an Alert.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"onClose\"), \" will be called when the close button is clicked. Use this to prevent closing an uncontrolled Alert or changing the \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"isOpen\"), \" state for a controlled Alert.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"afterClose\"), \" is called when the closing animation is finished. Use this to unmount an uncontrolled Alert or run an action after closing.\"), React.createElement(MDXTag, {\n    name: \"pre\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"code\",\n    components: components,\n    parentName: \"pre\",\n    props: {\n      \"className\": \"language-js\",\n      \"metaString\": \"live\",\n      \"live\": true\n    }\n  }, \"<Row gutter={1}>\\n  <Col transparent span={12}>\\n    <Alert\\n      type=\\\"success\\\"\\n      onClose={() => {\\n        alert('onClose for success Alert');\\n      }}\\n      afterClose={() => {\\n        alert('afterClose for success Alert.');\\n      }}\\n    >\\n      Success Alert with onClose and afterClose.\\n    </Alert>\\n  </Col>\\n  <Col transparent span={12}>\\n    <Alert\\n      type=\\\"warning\\\"\\n      onClose={ev => {\\n        ev.preventDefault();\\n        alert('onClose for warning Alert prevents closing.');\\n      }}\\n      afterClose={() => {\\n        alert('This message will never appear.');\\n      }}\\n    >\\n      Warning Alert that prevents closing in onClose.\\n    </Alert>\\n  </Col>\\n</Row>\\n\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, \"Design Guidelines\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Alerts are banners that communicate a message with a severity attached to it. They grab the user\\u2019s attention to provide critical information needed in context.\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Main Types\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"There are two main types of Alerts: \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"Alert\"), \" and \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"AlertGroup\"), \".\"), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, \"Alert\"), React.createElement(Alert, {\n    type: \"success\"\n  }, \"Your data has been saved.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"A standard Alert is used in the context of a form or Component.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Place the Alert near the relevant item.\"), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, \"AlertGroup\"), React.createElement(AlertGroup, null, React.createElement(Alert, {\n    type: \"warning\",\n    icon: shieldOff\n  }, \"Virus protection has been turned off!\")), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"An \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"AlertGroup\"), \" is used at the global context of an app. AlertGroups should be placed at the top of the app.\"), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, \"Types\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"There ar four types of alerts: \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"info\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"success\"), \", \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"warning\"), \" and \", React.createElement(MDXTag, {\n    name: \"inlineCode\",\n    components: components,\n    parentName: \"p\"\n  }, \"danger\"), \". Each one of them for their own specific purpose.\"), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, \"Info\"), React.createElement(Alert, {\n    type: \"info\"\n  }, \"You can customize your settings on the settings page\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Use info alerts to inform users or educate them about a feature. Info alerts should be dismissable and not overused.\"), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, \"Success\"), React.createElement(Alert, {\n    type: \"success\"\n  }, \"Registration successful.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Use success alerts for a result or success confirmation of a user action.\"), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, \"Warning\"), React.createElement(Alert, {\n    type: \"warning\"\n  }, \"This feature is still experimental\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Use warning alerts to notify users about messages that may need their attention but might not cause errors.\"), React.createElement(MDXTag, {\n    name: \"h4\",\n    components: components\n  }, \"Danger\"), React.createElement(Alert, {\n    type: \"danger\"\n  }, \"Login failed, invalid credentials.\"), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, \"Use error alerts for errors, malfunctions and critical issues.\"), React.createElement(DoDont, {\n    do: ['Place the alert near the relevant component in an unobtrusive location.', 'Place the AlertGroup only at the top of the page.', 'Keep the content text brief and to the point.', 'Use the right type of alert.'],\n    dont: [\"Dont't use long paragraphs inside an alert\", \"Don't overuse the number of alerts on a single page, they may use significance.\"]\n  }));\n});"],"sourceRoot":""}