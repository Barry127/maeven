_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[24],{MsEY:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Form/Form",function(){return t("WL1P")}])},WL1P:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return i}));var o=t("wx14"),l=t("Ff2n"),a=t("q1tI"),c=t.n(a),s=t("7ljp"),r=t("9Xuy"),u=(c.a.createElement,{});function i(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(s.b)("wrapper",Object(o.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)(r.c,{title:"Form",mdxType:"Meta"}),Object(s.b)("h1",null,"Form"),Object(s.b)(r.a,{of:"Form",mdxType:"Description"}),Object(s.b)("h2",null,"Props"),Object(s.b)(r.d,{of:"Form",mdxType:"Props"}),Object(s.b)("h2",null,"Examples"),Object(s.b)("h3",null,"Basic"),Object(s.b)("p",null,"A basic usage of Form."),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live withRender",live:!0,withRender:!0}),"const FullForm = () => {\n  const [tc, setTc] = useState(false);\n  const [news, setNews] = useState(true);\n\n  const options = [\n    { value: 'JavaScript' },\n    { value: 'Java' },\n    { value: 'PHP' },\n    { value: 'Perl' },\n    { value: 'C' },\n    { value: 'Lua' },\n    { value: 'C++' },\n    { value: 'Rust' }\n  ];\n\n  const radioOptions = [\n    { label: 'Javascript', value: 'js' },\n    { label: 'Typescript', value: 'ts' },\n    { label: 'Coffescript', value: 'coffee' }\n  ];\n\n  function toggleAll() {\n    if (tc && news) {\n      setTc(false);\n      setNews(false);\n    } else {\n      setTc(true);\n      setNews(true);\n    }\n  }\n\n  return (\n    <Form onSubmit={(ev) => ev.preventDefault()}>\n      <TextInput label=\"Username\" icon={user} />\n      <PasswordInput label=\"Password\" icon={lock} />\n      <Select label=\"Language\" options={options} />\n      <RadioGroup label=\"Flavour\" options={radioOptions} name=\"flavour\" />\n      <Toggle label=\"Toggle\" />\n      <TextArea label=\"Comment\" />\n      <FormField>\n        <CheckBox\n          checked={tc && news}\n          indeterminate={tc !== news}\n          onChange={toggleAll}\n        >\n          Accept All\n        </CheckBox>\n        <CheckBox checked={tc} onChange={(ev) => setTc(ev.target.checked)}>\n          Accept Terms & Conditions\n        </CheckBox>\n        <CheckBox checked={news} onChange={(ev) => setNews(ev.target.checked)}>\n          Receive Newsletter\n        </CheckBox>\n      </FormField>\n      <FormField>\n        <Button type=\"submit\" buttonType=\"primary\">\n          Save\n        </Button>\n        <Button type=\"reset\">Cancel</Button>\n      </FormField>\n    </Form>\n  );\n};\n\nrender(<FullForm />);\n")),Object(s.b)("h3",null,"Vertical"),Object(s.b)("p",null,"A form can have a vertical layout."),Object(s.b)("pre",null,Object(s.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live withRender",live:!0,withRender:!0}),"const FullForm = () => {\n  const [tc, setTc] = useState(false);\n  const [news, setNews] = useState(true);\n\n  const options = [\n    { value: 'JavaScript' },\n    { value: 'Java' },\n    { value: 'PHP' },\n    { value: 'Perl' },\n    { value: 'C' },\n    { value: 'Lua' },\n    { value: 'C++' },\n    { value: 'Rust' }\n  ];\n\n  const radioOptions = [\n    { label: 'Javascript', value: 'js' },\n    { label: 'Typescript', value: 'ts' },\n    { label: 'Coffescript', value: 'coffee' }\n  ];\n\n  function toggleAll() {\n    if (tc && news) {\n      setTc(false);\n      setNews(false);\n    } else {\n      setTc(true);\n      setNews(true);\n    }\n  }\n\n  return (\n    <Form layout=\"vertical\" onSubmit={(ev) => ev.preventDefault()}>\n      <TextInput label=\"Username\" icon={user} />\n      <PasswordInput label=\"Password\" icon={lock} />\n      <Select label=\"Language\" options={options} />\n      <RadioGroup label=\"Flavour\" options={radioOptions} name=\"flavour\" />\n      <Toggle label=\"Toggle\" />\n      <TextArea label=\"Comment\" />\n      <FormField>\n        <CheckBox\n          checked={tc && news}\n          indeterminate={tc !== news}\n          onChange={toggleAll}\n        >\n          Accept All\n        </CheckBox>\n        <CheckBox checked={tc} onChange={(ev) => setTc(ev.target.checked)}>\n          Accept Terms & Conditions\n        </CheckBox>\n        <CheckBox checked={news} onChange={(ev) => setNews(ev.target.checked)}>\n          Receive Newsletter\n        </CheckBox>\n      </FormField>\n      <FormField>\n        <Button type=\"submit\" buttonType=\"primary\">\n          Save\n        </Button>\n        <Button type=\"reset\">Cancel</Button>\n      </FormField>\n    </Form>\n  );\n};\n\nrender(<FullForm />);\n")))}i.isMDXComponent=!0}},[["MsEY",0,1,7,5,8,6,2,3,4,9]]]);