_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[34],{BJQe:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Form/TypeAheadInput",function(){return t("O7qR")}])},O7qR:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return c}));var a=t("wx14"),l=t("Ff2n"),p=t("q1tI"),s=t.n(p),o=t("7ljp"),r=t("9Xuy"),u=(s.a.createElement,{});function c(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)(r.c,{title:"TypeAheadInput",mdxType:"Meta"}),Object(o.b)("h1",null,"TypeAheadInput"),Object(o.b)(r.a,{of:"TypeAheadInput",mdxType:"Description"}),Object(o.b)("h2",null,"Props"),Object(o.b)(r.d,{of:"TypeAheadInput",mdxType:"Props"}),Object(o.b)("h2",null,"Examples"),Object(o.b)("h3",null,"Basic"),Object(o.b)("p",null,"A basic usage of TypeAheadInput."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"live",live:!0}),"<TypeAheadInput\n  items={['JavaScript', 'Java', 'PHP', 'Perl', 'C', 'C++', 'Rust', 'Lua']}\n>\n  Start typing...\n</TypeAheadInput>\n")),Object(o.b)("h3",null,"Controlled"),Object(o.b)("p",null,"A controlled TypeAheadInput."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"live withRender",live:!0,withRender:!0}),"const Controlled = (props) => {\n  const [value, setValue] = useState('');\n  return (\n    <TypeAheadInput\n      {...props}\n      value={value}\n      onChange={(ev) => setValue(ev.target.value)}\n    >\n      Value: <i>{value}</i>\n    </TypeAheadInput>\n  );\n};\n\nrender(\n  <Row gutter={1}>\n    <Col>\n      <H4>Controlled input with items as array</H4>\n      <Controlled\n        items={['JavaScript', 'Java', 'PHP', 'Perl', 'C', 'C++', 'Rust', 'Lua']}\n      />\n    </Col>\n    <Col>\n      <H4>Controlled input with items as syncGetItems</H4>\n      <Controlled\n        items={() => [\n          'JavaScript',\n          'Java',\n          'PHP',\n          'Perl',\n          'C',\n          'C++',\n          'Rust',\n          'Lua'\n        ]}\n      />\n    </Col>\n  </Row>\n);\n")),Object(o.b)("h3",null,"Async items"),Object(o.b)("p",null,"Items can be loaded async."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js",metastring:"live withRender",live:!0,withRender:!0}),"const items = ['JavaScript', 'Java', 'PHP', 'Perl', 'C', 'C++', 'Rust', 'Lua'];\nconst getItems = () =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(items);\n    }, 500);\n  });\n\nrender(<TypeAheadInput items={getItems} />);\n")))}c.isMDXComponent=!0}},[["BJQe",0,1,7,5,8,6,2,3,4,9]]]);