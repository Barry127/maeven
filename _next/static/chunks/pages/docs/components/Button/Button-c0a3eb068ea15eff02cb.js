_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[18],{GlHa:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/components/Button/Button",function(){return e("gzAB")}])},gzAB:function(n,t,e){"use strict";e.r(t),e.d(t,"default",(function(){return s}));var o=e("wx14"),u=e("Ff2n"),i=e("q1tI"),a=e.n(i),l=e("7ljp"),c=e("9Xuy"),r=(a.a.createElement,{});function s(n){var t=n.components,e=Object(u.a)(n,["components"]);return Object(l.b)("wrapper",Object(o.a)({},r,e,{components:t,mdxType:"MDXLayout"}),Object(l.b)(c.c,{title:"Button",mdxType:"Meta"}),Object(l.b)("h1",null,"Button"),Object(l.b)(c.a,{of:"Button",mdxType:"Description"}),Object(l.b)("h2",null,"Props"),Object(l.b)(c.d,{of:"Button",mdxType:"Props"}),Object(l.b)("h3",null,"Basic"),Object(l.b)("p",null,"A basic usage of Button."),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live",live:!0}),"<Button onClick={() => alert('Button Clicked')}>Click Me!</Button>\n")),Object(l.b)("h3",null,"buttonType"),Object(l.b)("p",null,"Buttons can by styled as different type of buttons."),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live",live:!0}),'<Block>\n  <H4>Active</H4>\n  <P>\n    <Button buttonType="primary">Primary</Button> <Button>Default</Button>{\' \'}\n    <Button buttonType="link">Link</Button>{\' \'}\n    <Button buttonType="success">Success</Button>{\' \'}\n    <Button buttonType="warning">Warning</Button>{\' \'}\n    <Button buttonType="danger">Danger</Button>\n  </P>\n  <H4>Disabled</H4>\n  <P>\n    <Button disabled buttonType="primary">\n      Primary\n    </Button>{\' \'}\n    <Button disabled>Default</Button>{\' \'}\n    <Button disabled buttonType="link">\n      Link\n    </Button>{\' \'}\n    <Button disabled buttonType="success">\n      Success\n    </Button>{\' \'}\n    <Button disabled buttonType="warning">\n      Warning\n    </Button>{\' \'}\n    <Button disabled buttonType="danger">\n      Disabled Danger\n    </Button>\n  </P>\n</Block>\n')),Object(l.b)("h3",null,"Icons"),Object(l.b)("p",null,"A button can contain icons."),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live",live:!0}),"// import { refreshCw } from 'icon-packs/feather';\n// import {\n//   userCircleSolid,\n//   caretDownSolid,\n//   arrowLeftSolid,\n//   arrowRightSolid,\n//   fileRegular,\n//   timesSolid,\n//   plusSolid\n// } from 'icon-packs/fa';\n\n<>\n  <Button buttonType=\"primary\" icon={refreshCw}>\n    Refresh\n  </Button>{' '}\n  <Button icon={userCircleSolid} iconRight={caretDownSolid}>\n    Profile\n  </Button>{' '}\n  <Button buttonType=\"warning\" iconRight={arrowRightSolid}>\n    Next\n  </Button>{' '}\n  <Button icon={fileRegular} iconRight={timesSolid}>\n    Upload...\n  </Button>{' '}\n  <Button buttonType=\"success\" icon={plusSolid} />{' '}\n  <Button icon={arrowLeftSolid} iconRight={arrowRightSolid} />\n</>\n")),Object(l.b)("h3",null,"Loading"),Object(l.b)("p",null,"Buttons can have a loading state."),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live withRender",live:!0,withRender:!0}),"// import { refreshCw } from 'icon-packs/feather';\n\nconst Example = () => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (loading) {\n      const to = setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n    }\n  }, [loading]);\n\n  return (\n    <Button\n      buttonType=\"primary\"\n      icon={refreshCw}\n      loading={loading}\n      onClick={() => setLoading(true)}\n    >\n      Click to toggle\n    </Button>\n  );\n};\n\nrender(<Example />);\n")),Object(l.b)("h3",null,"Sizes"),Object(l.b)("p",null,"Buttons can have different sizes."),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live",live:!0}),'<>\n  <Button icon={userCircleSolid} buttonType="primary" size="sm">\n    Small Button\n  </Button>{\' \'}\n  <Button icon={userCircleSolid} buttonType="primary" size="md">\n    Medium Button\n  </Button>{\' \'}\n  <Button icon={userCircleSolid} buttonType="primary" size="lg">\n    Large Button\n  </Button>\n</>\n')),Object(l.b)("h3",null,"Fluid"),Object(l.b)("p",null,"A fluid button takes up the full width."),Object(l.b)("pre",null,Object(l.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js",metastring:"live",live:!0}),'<Button buttonType="primary" fluid>\n  Fluid Button\n</Button>\n')))}s.isMDXComponent=!0}},[["GlHa",0,1,7,5,8,6,2,3,4,9]]]);