.container {
  display: flex;
  flex-direction: column;

  &.inline {
    align-items: center;
    display: inline-flex;
    flex-direction: row;
  }
}

.label {
  align-items: center;
  display: inline-flex;
  vertical-align: middle;
}

.has-children {
  display: flex;
  width: 100%;
}

.circle {
  background-color: var(--mvn-light-grey3);
  background-image: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.8),
    rgba(255, 255, 255, 0)
  );
  border-radius: 50%;
  box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
    inset 0 -1px 0 rgba(51, 51, 51, 0.1);
  position: relative;

  :global(.mvn-dark) & {
    background-color: var(--mvn-dark-grey2);
    background-image: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0)
    );
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
      inset 0 -1px 0 rgba(51, 51, 51, 0.6);
  }

  &::after {
    background-color: var(--mvn-primary3);
    background-image: linear-gradient(
      to bottom,
      var(--mvn-primary3-l5),
      var(--mvn-primary3-d5)
    );
    border-radius: 50%;
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.3),
      inset 0 -1px 0 rgba(51, 51, 51, 0.15);
    content: '';
    height: 100%;
    left: 50%;
    opacity: 0;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%) scale(0.2);
    transition: animate-transition(opacity), animate-transition(transform);
    width: 100%;

    &:hover {
      background-color: var(--mvn-primary4);
      background-image: linear-gradient(
        to bottom,
        var(--mvn-primary4-l5),
        var(--mvn-primary4-d5)
      );
    }
  }

  &:hover {
    background-color: var(--mvn-light-grey4);

    :global(.mvn-dark) & {
      background-color: var(--mvn-dark-grey3);
    }
  }
}

.input {
  height: 0;
  opacity: 0;
  position: absolute;
  width: 0;

  &:focus + .circle {
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
      inset 0 -1px 0 rgba(51, 51, 51, 0.1),
      0 0 0 var(--mvn-size-outline) var(--mvn-color-outline);

    :global(.mvn-dark) & {
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
        inset 0 -1px 0 rgba(51, 51, 51, 0.6),
        0 0 0 var(--mvn-size-outline) var(--mvn-color-outline);
    }
  }

  &:active:not(:disabled) + .circle {
    background-color: var(--mvn-light-grey3);
    background-image: none;
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
      inset 0 1px 2px rgba(51, 51, 51, 0.2);

    :global(.mvn-dark) & {
      background-color: var(--mvn-dark-grey3);
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.6),
        inset 0 1px 2px rgba(51, 51, 51, 0.2);
    }
  }

  &:checked {
    & + .circle {
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
        inset 0 -1px 0 rgba(51, 51, 51, 0.1), 0 0 0 1px var(--mvn-primary3);

      :global(.mvn-dark) & {
        box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
          inset 0 -1px 0 rgba(51, 51, 51, 0.6), 0 0 0 1px var(--mvn-primary3);
      }

      &::after {
        opacity: 1;
        transform: translate(-50%, -50%) scale(0.6);
      }
    }
  }

  &:disabled {
    + .circle {
      background-color: var(--mvn-grey1);
      background-image: none;
      pointer-events: none;

      :global(.mvn-dark) & {
        background-color: var(--mvn-dark-grey1);
      }
    }

    & ~ .text {
      opacity: 0.6;
    }

    &:checked + .circle {
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
        inset 0 -1px 0 rgba(51, 51, 51, 0.1);

      :global(.mvn-dark) & {
        box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
          inset 0 -1px 0 rgba(51, 51, 51, 0.6);
      }

      &::after {
        background-color: var(--mvn-primary-l30);
        background-image: none;
        box-shadow: none;
      }
    }
  }

  &:focus + .circle {
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
      inset 0 -1px 0 rgba(51, 51, 51, 0.1),
      0 0 0 var(--mvn-size-outline) var(--mvn-color-outline);

    :global(.mvn-dark) & {
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
        inset 0 -1px 0 rgba(51, 51, 51, 0.6),
        0 0 0 var(--mvn-size-outline) var(--mvn-color-outline);
    }
  }
}

.has-error {
  .circle {
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
      inset 0 -1px 0 rgba(51, 51, 51, 0.1),
      0 0 0 1px var(--mvn-color-text-danger);

    :global(.mvn-dark) & {
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
        inset 0 -1px 0 rgba(51, 51, 51, 0.6),
        0 0 0 1px var(--mvn-color-text-danger-dark);
    }
  }

  .input {
    &:disabled + .circle {
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
        inset 0 -1px 0 rgba(51, 51, 51, 0.1), 0 0 0 1px var(--mvn-danger-l30);

      :global(.mvn-dark) & {
        box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
          inset 0 -1px 0 rgba(51, 51, 51, 0.6), 0 0 0 1px var(--mvn-danger-l30);
      }
    }

    &:checked {
      & + .circle {
        box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
          inset 0 -1px 0 rgba(51, 51, 51, 0.1), 0 0 0 1px var(--mvn-danger3);

        :global(.mvn-dark) & {
          box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
            inset 0 -1px 0 rgba(51, 51, 51, 0.6), 0 0 0 1px var(--mvn-danger3);
        }

        &::after {
          background-color: var(--mvn-danger3);
          background-image: linear-gradient(
            to bottom,
            var(--mvn-danger3-l5),
            var(--mvn-danger3-d5)
          );
          color: var(--mvn-danger-background-text);

          &:hover {
            background-color: var(--mvn-danger4);
            background-image: linear-gradient(
              to bottom,
              var(--mvn-danger4-l5),
              var(--mvn-danger4-d5)
            );
          }
        }
      }

      &:focus + .circle {
        box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
          inset 0 -1px 0 rgba(51, 51, 51, 0.1),
          0 0 0 var(--mvn-size-outline) var(--mvn-color-outline-danger);

        :global(.mvn-dark) & {
          box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
            inset 0 -1px 0 rgba(51, 51, 51, 0.6),
            0 0 0 var(--mvn-size-outline) var(--mvn-color-outline-danger);
        }
      }

      &:disabled + .circle::after {
        background-color: var(--mvn-danger-l30);
        background-image: none;
        box-shadow: none;
      }
    }
  }

  .text {
    color: var(--mvn-color-text-danger);

    :global(.mvn-dark) & {
      color: var(--mvn-color-text-danger-dark);
    }
  }
}

.sm {
  .circle {
    height: 1.75rem;
    width: 1.75rem;
  }

  &.has-label {
    padding-top: 0.4rem;
  }

  &.has-children .circle {
    margin-right: 0.7rem;
  }

  .text {
    font-size: 1.4rem;
  }

  &.container:not(.inline) .label + .label {
    margin-top: 0.365rem;
  }

  &.container.inline .label + .label {
    margin-left: 1.4rem;
  }
}

.md {
  .circle {
    height: 2rem;
    width: 2rem;
  }

  &.has-label {
    padding-top: 0.6rem;
  }

  &.has-children .circle {
    margin-right: 0.8rem;
  }

  .text {
    font-size: 1.6rem;
  }

  &.container:not(.inline) .label + .label {
    margin-top: 0.5rem;
  }

  &.container.inline .label + .label {
    margin-left: 1.6rem;
  }
}

.lg {
  .circle {
    height: 2.25rem;
    width: 2.25rem;
  }

  &.has-label {
    padding-top: 0.9rem;
  }

  &.has-children .circle {
    margin-right: 0.9rem;
  }

  .text {
    font-size: 1.8rem;
  }

  &.container:not(.inline) .label + .label {
    margin-top: 0.64rem;
  }

  &.container.inline .label + .label {
    margin-left: 1.8rem;
  }
}
