@import '../../../common/mixins';

.container {
  align-items: center;
  display: inline-flex;
  vertical-align: middle;
}

.has-children {
  display: flex;
  width: 100%;
}

.toggle {
  background-color: var(--mvn-color-background-text);
  border: 1px solid var(--mvn-color-border);
  color: var(--mvn-color-text);
  cursor: pointer;
  position: relative;
  transition: animate-transition(background-color), animate-transition(color);
  user-select: none;

  :global(.mvn-dark) & {
    background-color: var(--mvn-color-background-text-dark);
    border-color: var(--mvn-color-border-dark);
    color: var(--mvn-color-text-dark);
  }
}

.knob {
  background-color: var(--mvn-light-grey3);
  background-image: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.8),
    rgba(255, 255, 255, 0)
  );
  border-radius: 50%;
  box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
    inset 0 -1px 0 rgba(51, 51, 51, 0.1);
  color: var(--mvn-color-text);
  position: relative;
  transition: animate-transition(box-shadow, 0.05s),
    animate-transition(transform);
  z-index: 1;

  :global(.mvn-dark) & {
    background-color: var(--mvn-dark-grey2);
    background-image: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0)
    );
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
      inset 0 -1px 0 rgba(51, 51, 51, 0.6);
  }

  &:hover {
    background-color: var(--mvn-light-grey4);

    :global(.mvn-dark) & {
      background-color: var(--mvn-dark-grey3);
    }
  }
}

.icon {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.input {
  opacity: 0;
  height: 0;
  width: 0;
  position: absolute;

  &:checked + .toggle {
    background: var(--mvn-primary3);
    color: var(--mvn-primary-background-text);
  }

  &:focus + .toggle .knob {
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
      inset 0 -1px 0 rgba(51, 51, 51, 0.1),
      0 0 0 var(--mvn-size-outline) var(--mvn-color-outline);
    z-index: 1;

    :global(.mvn-dark) & {
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.4),
        inset 0 -1px 0 rgba(51, 51, 51, 0.6),
        0 0 0 var(--mvn-size-outline) var(--mvn-color-outline);
    }
  }

  &:active:not(:disabled) + .toggle .knob {
    background-color: var(--mvn-light-grey3);
    background-image: none;
    box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.2),
      inset 0 1px 2px rgba(51, 51, 51, 0.2);

    :global(.mvn-dark) & {
      background-color: var(--mvn-dark-grey3);
      box-shadow: inset 0 0 0 1px rgba(51, 51, 51, 0.6),
        inset 0 1px 2px rgba(51, 51, 51, 0.2);
    }
  }

  &:disabled {
    & + .toggle {
      background-color: var(--mvn-color-background);
      color: var(--mvn-color-text-grey);
      pointer-events: none;

      :global(.mvn-dark) & {
        background: var(--mvn-dark-grey1);
      }

      .knob {
        box-shadow: none;
        pointer-events: none;
        background-image: none;

        :global(.mvn-dark) & {
          background-color: var(--mvn-dark-grey2);
        }
      }
    }

    &:checked + .toggle {
      background-color: var(--mvn-primary-l30);
      color: var(--mvn-color-text-light-grey);
    }
  }
}

.sm {
  .toggle {
    border-radius: 1.25rem;
    height: 2.5rem;
    width: calc(5rem - 8px);
  }

  &.has-label .toggle {
    margin: 0.35rem 0;
  }

  &.has-children .toggle {
    margin-right: 0.7rem;
  }

  .knob {
    margin: 2px;
    height: calc(2.5rem - 6px);
    width: calc(2.5rem - 6px);
  }

  .icon {
    text-align: center;
    width: calc(2.5rem - 6px);

    &.on {
      left: 2px;
    }

    &.off {
      left: calc(2.5rem - 6px);
    }
  }

  .input:checked + .toggle .knob {
    transform: translateX(calc(2.5rem - 8px));
  }

  .toggle,
  .text {
    font-size: 1.4rem;
  }
}

.md {
  .toggle {
    border-radius: 1.4rem; //height / 2
    height: 2.8rem; //1.75 * font-size
    width: calc(5.6rem - 8px); // 2*height - 8px
  }

  &.has-label .toggle {
    margin: 0.6rem 0; // (input-height - height) / 2
  }

  &.has-children .toggle {
    margin-right: 0.8rem; // font-size / 2
  }

  .knob {
    margin: 2px;
    height: calc(2.8rem - 6px); //height
    width: calc(2.8rem - 6px); //height
  }

  .icon {
    text-align: center;
    width: calc(2.8rem - 6px); //height

    &.on {
      left: 2px;
    }

    &.off {
      left: calc(2.8rem - 6px); //height
    }
  }

  .input:checked + .toggle .knob {
    transform: translateX(calc(2.8rem - 8px));
  }

  .toggle,
  .text {
    font-size: 1.6rem;
  }
}

.lg {
  .toggle {
    border-radius: 1.575rem;
    height: 3.15rem;
    width: calc(6.3rem - 8px);
  }

  &.has-label .toggle {
    margin: 0.825rem 0;
  }

  &.has-children .toggle {
    margin-right: 0.9rem;
  }

  .knob {
    margin: 2px;
    height: calc(3.15rem - 6px);
    width: calc(3.15rem - 6px);
  }

  .icon {
    text-align: center;
    width: calc(3.15rem - 6px);

    &.on {
      left: 2px;
    }

    &.off {
      left: calc(3.15rem - 6px);
    }
  }

  .input:checked + .toggle .knob {
    transform: translateX(calc(3.15rem - 8px));
  }

  .toggle,
  .text {
    font-size: 1.8rem;
  }
}
