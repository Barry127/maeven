@import '../../common/colors';

.block {
  font-family: var(--mvn-typography-font-family);
  line-height: var(--mvn-typography-line-height);
}

.padding {
  padding: 1rem;
}

@each $color, $dashedColor in $colorsMap {
  .background-#{$color} {
    background: var(--mvn-#{$dashedColor});
    color: var(--mvn-#{$dashedColor}-background-text);
  }
}

.background-background {
  background: var(--mvn-color-background);
  color: var(--mvn-color-text);

  :global(.mvn-dark) & {
    background: var(--mvn-color-background-dark);
    color: var(--mvn-color-text-dark);
  }
}

.background-textBackground {
  background: var(--mvn-color-background-text);
  color: var(--mvn-color-text);

  :global(.mvn-dark) & {
    background: var(--mvn-color-background-text-dark);
    color: var(--mvn-color-text-dark);
  }
}

@each $color, $dashedColor in $colorsMap {
  .text-#{$color} {
    color: var(--mvn-color-text-#{$dashedColor});

    :global(.mvn-dark) & {
      color: var(--mvn-color-text-#{$dashedColor}-dark);
    }
  }

  a.text-#{$color} {
    &:hover,
    &:focus {
      color: var(--mvn-color-text-#{$dashedColor}-d10);

      :global(.mvn-dark) & {
        color: var(--mvn-color-text-#{$dashedColor}-dark-l10);
      }
    }
  }
}

.text-inherit {
  color: inherit;

  :global(.mvn-dark) & {
    color: inherit;
  }
}

a.text-inherit {
  &:hover,
  &:focus {
    filter: brightness(80%);
  }

  :global(.mvn-dark) & {
    filter: brightness(120%);
  }
}
